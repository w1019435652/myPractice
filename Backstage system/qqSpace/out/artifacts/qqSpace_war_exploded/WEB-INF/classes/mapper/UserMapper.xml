<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.springmvc.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.springmvc.entity.User" >
    <id column="u_id" property="uId" jdbcType="INTEGER" />
    <result column="u_name" property="uName" jdbcType="VARCHAR" />
    <result column="u_account" property="uAccount" jdbcType="VARCHAR" />
    <result column="u_pwd" property="uPwd" jdbcType="VARCHAR" />
    <result column="u_img" property="uImg" jdbcType="VARCHAR" />
    <result column="u_phone" property="uPhone" jdbcType="VARCHAR" />
    <result column="u_state" property="uState" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    u_id, u_name, u_account, u_pwd, u_img, u_phone, u_state
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where u_id = #{uId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where u_id = #{uId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.springmvc.entity.User" >
    insert into user (u_id, u_name, u_account, 
      u_pwd, u_img, u_phone, 
      u_state)
    values (#{uId,jdbcType=INTEGER}, #{uName,jdbcType=VARCHAR}, #{uAccount,jdbcType=VARCHAR}, 
      #{uPwd,jdbcType=VARCHAR}, #{uImg,jdbcType=VARCHAR}, #{uPhone,jdbcType=VARCHAR}, 
      #{uState,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.springmvc.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uId != null" >
        u_id,
      </if>
      <if test="uName != null" >
        u_name,
      </if>
      <if test="uAccount != null" >
        u_account,
      </if>
      <if test="uPwd != null" >
        u_pwd,
      </if>
      <if test="uImg != null" >
        u_img,
      </if>
      <if test="uPhone != null" >
        u_phone,
      </if>
      <if test="uState != null" >
        u_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uId != null" >
        #{uId,jdbcType=INTEGER},
      </if>
      <if test="uName != null" >
        #{uName,jdbcType=VARCHAR},
      </if>
      <if test="uAccount != null" >
        #{uAccount,jdbcType=VARCHAR},
      </if>
      <if test="uPwd != null" >
        #{uPwd,jdbcType=VARCHAR},
      </if>
      <if test="uImg != null" >
        #{uImg,jdbcType=VARCHAR},
      </if>
      <if test="uPhone != null" >
        #{uPhone,jdbcType=VARCHAR},
      </if>
      <if test="uState != null" >
        #{uState,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springmvc.entity.User" >
    update user
    <set >
      <if test="uName != null" >
        u_name = #{uName,jdbcType=VARCHAR},
      </if>
      <if test="uAccount != null" >
        u_account = #{uAccount,jdbcType=VARCHAR},
      </if>
      <if test="uPwd != null" >
        u_pwd = #{uPwd,jdbcType=VARCHAR},
      </if>
      <if test="uImg != null" >
        u_img = #{uImg,jdbcType=VARCHAR},
      </if>
      <if test="uPhone != null" >
        u_phone = #{uPhone,jdbcType=VARCHAR},
      </if>
      <if test="uState != null" >
        u_state = #{uState,jdbcType=INTEGER},
      </if>
    </set>
    where u_id = #{uId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springmvc.entity.User" >
    update user
    set u_name = #{uName,jdbcType=VARCHAR},
      u_account = #{uAccount,jdbcType=VARCHAR},
      u_pwd = #{uPwd,jdbcType=VARCHAR},
      u_img = #{uImg,jdbcType=VARCHAR},
      u_phone = #{uPhone,jdbcType=VARCHAR},
      u_state = #{uState,jdbcType=INTEGER}
    where u_id = #{uId,jdbcType=INTEGER}
  </update>
  <!--登录-->
  <select id="login" resultMap="BaseResultMap" parameterType="com.springmvc.entity.User">
    select u_id,u_name,u_account,u_pwd,u_img from user
    where u_account = #{uAccount,jdbcType=VARCHAR}
    and u_pwd = #{uPwd,jdbcType=VARCHAR}
  </select>
  <select id="latest_addition_of_friends_num" parameterType="java.lang.String" resultType="java.lang.Integer">
    select count(*) from user_friend
    where u_id
    in(select u_id from user
    where u_account = #{account})
    and f_addTime>date_sub(curdate(),interval 1 year)
  </select>
  <select id="the_query_recently_added_friends" parameterType="java.lang.String" resultMap="BaseResultMap">
    select u.u_id,u_name,u_img,f_intimacy
    from user u
    inner join user_friend f
    on u.u_account=f.f_account
    where u_account
    in(select f_account from user_friend where u_id in(select u_id from user where u_account = #{account})
    and f_addTime>date_sub(curdate(),interval 1 year))
  </select>
  <insert id="registered_user" parameterType="com.springmvc.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uName != null">
        u_name,
      </if>
      <if test="uAccount != null">
        u_account,
      </if>
      <if test="uPwd != null">
        u_pwd,
      </if>
      <if test="uPhone != null">
        u_phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uName != null">
        #{uName,jdbcType=INTEGER},
      </if>
      <if test="uAccount != null">
        #{uAccount,jdbcType=INTEGER},
      </if>
      <if test="uPwd != null">
        #{uPwd,jdbcType=INTEGER},
      </if>
      <if test="uPhone != null">
        #{uPhone,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="user_state" parameterType="java.lang.String">
    update user set u_state = 1 where u_account = #{account}
  </update>
  <select id="query_user_state" resultType="java.lang.Integer" parameterType="java.lang.String">
    select u_state from user where u_account = #{account}
  </select>
  <update id="user_esc" parameterType="java.lang.String">
    update user set u_state = 0 where u_account = #{account}
  </update>
</mapper>